/// @title GuardManager - A contract managing transaction guards which perform pre and post-checks on Safe transactions.
/// @notice SPDX-License-Identifier: MIT
/// @author Malik_dev /      
/// @notice Transactor simulator Implementation in Huff


#include "./common/SelfAuthorized.huff";

/**INTERFACES**/
#define function setGuard(address) returns ()
#define function getGuard(address) view returns ()

/**EVENTS**/
#define event ChangedGuard(address indexed)

/**STORGAE**/
#define constant GUARD_STORAGE_SLOT = 0x4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c8;

#define macro SETGUARD() = takes(1) returns(0) {
  SELFAUTHORIZED();
  //input stack:               //[address_guard]
  dup1, 0x00                   //[address(0), address_guard, address_guard]   
  eq EQUAL                     //[address_guard]
  0x00 0xe29e2116 mstore       //[address_guard]
  0x20 0xe6d7a83a mstore       //[address_guard]
  0x00 0x00 0x24 0x12          //[0x12, 0x24, 0x00, 0x00, address_guard]
  dup5 gas staticcall          //[result, address_guard]
  0x00 eq REVERT dup1          //[address_guard,address_guard]
  [GUARD_STORAGE_SLOT]         //[var_slot, address_guard, address_guard]
  sstore                       //[address_guard]
  _EVENT_HASH(ChangedGuard)    //[sig, address_guard]
  0x00 0x00 log2               //[]
  

  EQUAL:
    dup1                       //[address_guard, address_guard]
    [GUARD_STORAGE_SLOT]       //[var_slot, address_guard, address_guard]
    sstore                     //[address_guard]
    _EVENT_HASH(ChangedGuard)  //[sig, address_guard]
    0x00 0x00 log2             //[]
     
    REVERT:
      0x4753333030 0x00 mstore //[]
      0x20 0x00 revert         //[]
}

#define marco GETGUARD() = takes(1) returns(0) {
  [GUARD_STORAGE_SLOT]   //[GUARD_ADDRESS]
  sload
}