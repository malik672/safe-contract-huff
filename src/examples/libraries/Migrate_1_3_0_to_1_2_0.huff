/// @title  Migration - Migrates a Safe contract from 1.3.0 to 1.2.0
/// @notice SPDX-License-Identifier: MIT
/// @author Malik_dev /      
/// @notice Migrate_1_3_0_to_1_2_0-huff implementation in huff

 /**INTERFACES**/
#define event  migrate() returns()


/**IMMUTABLES OFFSET**/
#define constant MIGRATION_OFFSET = 0x0000000000000000000000000000000000000000000000000000000000000020
#define constant SINGLETON_OFFSET =    0x00000000000000000000000000000000000000000000000000000000000000a0

/**IMMUTABLES**/
#define constant MIGRATIONSINGLETON = address
#define constant SAFE120SINGLETON =  FREE_STORAGE_POINTER()

/**CONSTANTS**/
#define constant DOMAIN_SEPERATOR_TYPEHASH = 0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749

/**EVENTS**/
#define event ChangedMasterCopy(address)


///@notice Constructor
///@notice Sets the initial domain seperator and chain ID
#define macro CONSTRUCTOR() = takes(1) returns (0) {
   
}

/// @notice Retrives an "immutable" from the runtime bytecode.
#define macro _GET_IMMUTABLE(offset_end, free_memory) = takes (0) returns (1) {
    0x20                        // [size]
    <offset_end> codesize sub   // [offset_code, size]
    <free_memory>               // [offset_memory, offset_code, size]
    codecopy                    // []
    <free_memory> mload         // [value]
}

///@notice migrate the version
#define macro MIGRATE() = takes(0) returns (0) {
  address _GET_IMMUTABLE(MIGRATION_OFFSET, 0x40) eq not INVALID //[]
  _GET_IMMUTABLE(MIGRATION_OFFSET,0x40)                         //[migration]
  DOMAIN_SEPERATOR_TYPEHASH 0x00 mstore address 0x20 mstore     //[migration]
  0x36 0x00 keccak swap1 0x00 mstore                            //[hash]
  _EVENT_HASH(migrate) 0x20 0x00 log3                           //[hash]
}